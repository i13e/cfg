#!/usr/bin/zsh
# Description

# If .zprofile wasn't sourced, source it.
[ -z "$XDG_CONFIG_HOME" ] && . "$HOME/.zprofile"

source $ZDOTDIR/config.zsh

function _cache {
  (( $+commands[$1] )) || return 1
  local cache_dir="$XDG_CACHE_HOME/${SHELL##*/}"
  local cache="$cache_dir/$1"
  if [[ ! -f $cache || ! -s $cache ]]; then
      #echo "Caching $1"
      mkdir -p $cache_dir
      "$@" >$cache
      chmod 600 $cache
  fi
  if [[ -o interactive ]]; then
      source $cache || rm -f $cache
  fi
}

# Be restrictive with permissions
if (( EUID != 0 )); then
    umask 027
# else
    # Be even more restrictive if root.
    # umask 077
fi

# Make zsh directories if needed.
local ZSH_CACHE="$XDG_CACHE_HOME/zsh"
local ZPLUGDIR="$XDG_DATA_HOME/zsh/plugins"
[ -d "$ZSH_CACHE" ] || mkdir -p "$ZSH_CACHE"
[ -d "$ZPLUGDIR" ] || mkdir -p "$ZPLUGDIR"

# # If not in tmux, start tmux.
# if [[ -z ${TMUX+X}${ZSH_SCRIPT+X}${ZSH_EXECUTION_STRING+X} ]]; then
#   exec tmux
# fi

zcompile-many() {
    local f
    for f; do
        [ "$f".zsh.zwc -nt "$f".zsh ] || zcompile -R -- "$f".zwc "$f";
    done
}

# NOTE: Be careful about plugin load order or subtle breakage can emerge.
repos=(
    #"jeffreytse/zsh-vi-mode"
    "zdharma-continuum/fast-syntax-highlighting"
    #"zsh-users/zsh-completions"
    "zsh-users/zsh-autosuggestions"
    "zsh-users/zsh-history-substring-search"
    "romkatv/powerlevel10k"
    "hlissner/zsh-autopair"
    "USER/dotbare"
)
plugins=(${repos:t})

## Clone and compile to wordcode missing plugins.
# for ((i = 1; i <= $#repos; i++)); do
#     if [ ! -d "$ZPLUGDIR/${plugins[$i]}" ]; then
#         local gh="https://github.com/${repos[$i]}.git"
#         git clone --depth=1 "$gh" "$ZPLUGDIR/$plugins[$i]"
#         # use cfg?
#         # cfg submodule add --shallow
#         # zcompile-many "$ZPLUGDIR/$plugins[$i]/src/*.zsh"
#         # zcompile-many "$ZPLUGDIR/$plugins[$i]/src/**/*.zsh"
#         # ln -s $ZPLUGDIR/$file/$file.(plugin.zsh|zsh-theme) $ZPLUGDIR/
#     elif [ -d "$ZPLUGDIR/${plugins[$i]}" ]; then
#         # zcompile-many "$ZPLUGDIR/$plugins[$i]/src/*.zsh"
#         # zcompile-many "$ZPLUGDIR/$plugins[$i]/src/**/*.zsh"
#         # ln -s $ZPLUGDIR/$file/$file.(plugin.zsh|zsh-theme) $ZPLUGDIR/
#         source $ZPLUGDIR/$plugins[$i]/$plugins[$i].(plugin.zsh|zsh-theme)
#     else
#         echo "Plugin ${plugins[$i]} already exists."
#     fi
# done
# zcompile-many ~/zsh-syntax-highlighting/{zsh-syntax-highlighting.zsh,highlighters/*/*.zsh}
# zcompile-many $ZPLUGDIR/zsh-autosuggestions/{zsh-autosuggestions.zsh,src/**/*.zsh}
# make -C ~/powerlevel10k pkg

# Activate Powerlevel10k Instant Prompt.
if [[ -r "$XDG_CACHE_HOME/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "$XDG_CACHE_HOME/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Enable the "new" completion system (compsys).
fpath=($ZPLUGDIR/zsh-completions/src $fpath)
autoload -Uz compinit && compinit -d $ZSH_CACHE/zcompdump-$ZSH_VERSION
zcompile-many $ZSH_CACHE/zcompdump-$ZSH_VERSION
zcompile-many $ZDOTDIR/*.zsh
unfunction zcompile-many

ZSH_AUTOSUGGEST_MANUAL_REBIND=1

## Load plugins.
# Don't use any plugins for root
# if [ "$EUID" -ne 0 ]; then fi

[ -x /usr/bin/fzf ] && source "$ZPLUGDIR/fzf.zsh"
for file in $plugins; do
    if [ -f $ZPLUGDIR/$file/$file.(plugin.zsh|zsh-theme) ] ; then
        #echo "Loading $file";
        source $ZPLUGDIR/$file/$file.(plugin.zsh|zsh-theme)
    fi
done
# To customize prompt, run `p10k configure` or edit $ZDOTDIR/p10k.zsh.
source "$ZDOTDIR/p10k.zsh"


# Enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    #test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    eval "$(dircolors -b $ZDOTDIR/dircolors)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

## Bootstrap interactive sessions
if [[ $TERM != dumb ]]; then
    # Change cursor shape to beam and pwd in terminal title
    export GPG_TTY=$TTY
    precmd() { printf "\e]0;%s\a" ${(V)${(%):-%1~}} >$TTY; printf "\e[5 q" >$TTY }
    preexec() { printf "\e]0;%s\a" ${(V)${(%):-%1~}} >$TTY; printf "\e[5 q" >$TTY }

    source "$ZDOTDIR/keybinds.zsh"
    source "$ZDOTDIR/completion.zsh"
    source "$ZDOTDIR/aliases.zsh"

    # Auto-generated by nixos
    #_source $ZDOTDIR/extra.zshrc
    # If you have host-local configuration, put it here
    #_source $ZDOTDIR/local.zshrc

    _cache fasd --init posix-alias zsh-{hook,{c,w}comp{,-install}}
    autopair-init
fi
